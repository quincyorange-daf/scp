#***** deny access to create Internet Gateways *******
data "aws_iam_policy_document" "DenyInternetAccess"" {
  statement {
    sid       = "DenyInternetAccess""
    effect    = "Deny"
    actions   = [
        "ec2:AttachInternetGateway",
        "ec2:CreateInternetGateway",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateVpcPeeringConnection",
        "ec2:AcceptVpcPeeringConnection",
        "globalaccelerator:Create*",
        "globalaccelerator:Update*"
        ]
    resources = ["*"]

    condition {
      test     = "StringNotLike"
      variable = "aws:PrincipalARN"

      values = [
        "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/ap-southeast-2/AWSReservedSSO_ITPManaged-SecurityManagement*",
        "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/ap-southeast-2/AWSReservedSSO_HybridCloud*"
      ]
    }
  }
}

#**** deny access for the account to leave the ITP organisation *******

data "aws_iam_policy_document" "PreventLeavingAWSOrganization" {
  statement {
    sid       = "PreventLeavingAWSOrganization"
    effect    = "Deny"
    actions   = [
        organizations:LeaveOrganization
        ]
    resources = ["*"]

    condition {
      test     = "StringNotLike"
      variable = "aws:PrincipalARN"
      values = [
        "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/ap-southeast-2/AWSReservedSSO_HybridCloud*"
      ]
    }
  }
}

#***** deny access to create public facing S3 buckets *******
data "aws_iam_policy_document" "PreventPublicS3Bucket" {
  statement {
    sid       = "PreventPublicS3Bucket"
    effect    = "Deny"
    actions   = [
        organizations:LeaveOrganization
        ]
    resources = ["*"]

    condition {
      test     = "StringNotLike"
      variable = "aws:PrincipalARN"
      values = [
        "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/ap-southeast-2/AWSReservedSSO_HybridCloud*"
      ]
    }
  }
}


#### create the policy and attach the policy rules ########
resource "aws_organizations_policy" "deny_igw_s3_org" {
  name        = "deny_igw_s3_org"
  description = "Allow certain EC2 instance types only."
  content     = [
    data.aws_iam_policy_document.DenyInternetAccess.json,
    data.aws_iam_policy_document.PreventLeavingAWSOrganization.json,
    data.aws_iam_policy_document.PreventPublicS3Bucket.json
  ]
}

 #### To attch policy on Organization Account ########
 resource "aws_organizations_policy_attachment" "deny_igw_s3_org" {
   policy_id = aws_organizations_policy.deny_igw_s3_org.id  ## (Required) The unique identifier (ID) of the policy that you want to attach to the target.
  target_id = "oue5q"  ## (Required) The unique identifier (ID) organizational unit, you want to attach the policy to.
 }